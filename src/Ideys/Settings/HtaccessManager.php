<?php

namespace Ideys\Settings;

/**
 * .htaccess file manager.
 */
class HtaccessManager
{
    /**
     * @var string
     */
    private $filePath;

    /**
     * @var array
     */
    private $fileData = array();

    /**
     * File auto-generated delimiter information text.
     *
     * @var array
     */
    private $autoGeneratedDelimiter = array(
        "########################################\n",
        "# DO NOT EDIT CONTENT AFTER THIS MESSAGE\n",
        "# THIS IS AN AUTO-GENERATED CONTENT\n",
        "\n",
    );


    /**
     * Constructor.
     */
    public function __construct()
    {
        $this->filePath = WEB_DIR.'/.htaccess';
    }

    /**
     * Update .htaccess file according to current settings.
     *
     * @param \Ideys\Settings\Settings $settings
     */
    public function updateHtaccess(Settings $settings)
    {
        $this->getHtaccessData();

        $this->resetAutoGeneratedContent();

        $this->insertDelimiter();

        $this->insertSubDomainRedirectionCode($settings->getSubDomain());

        file_put_contents($this->filePath, $this->fileData);
    }

    /**
     * Return .htaccess data, create file if not exists.
     */
    private function getHtaccessData()
    {
        if (!file_exists($this->filePath)) {
            fopen($this->filePath, 'a');
        }

        $this->fileData = file($this->filePath);
    }

    /**
     * Remove all content from .htaccess generated by this class.
     */
    private function resetAutoGeneratedContent()
    {
        foreach ($this->fileData as $row => $line) {
            if ( ($line == $this->autoGeneratedDelimiter[0])
            && ($this->fileData[$row + 1] == $this->autoGeneratedDelimiter[1])) {
                $this->fileData = array_slice($this->fileData, 0, ($row - 1));
                break;
            }
        }
    }

    /**
     * Insert auto-generated code delimiter.
     */
    private function insertDelimiter()
    {
        $this->fileData = array_merge($this->fileData, ["\n"], $this->autoGeneratedDelimiter);
    }

    /**
     * Generate apache code to redirect www sub-domain
     * to root or vice versa.
     *
     * @param string $subDomain
     */
    private function insertSubDomainRedirectionCode($subDomain)
    {
        $redirectCodes = array(
            // Rewrite www.example.com → example.com
            'root' => array(
                "<IfModule mod_rewrite.c>\n",
                "RewriteCond %{HTTPS} !=on\n",
                "RewriteCond %{HTTP_HOST} ^www\.(.+)$ [NC]\n",
                "RewriteRule ^ http://%1%{REQUEST_URI} [R=301,L]\n",
                "</IfModule>\n",
                "\n",
            ),
            // Rewrite example.com → www.example.com
            'www' => array(
                "<IfModule mod_rewrite.c>\n",
                "RewriteCond %{HTTPS} !=on\n",
                "RewriteCond %{HTTP_HOST} !^www\..+$ [NC]\n",
                "RewriteCond %{HTTP_HOST} !=localhost [NC]\n",
                "RewriteCond %{HTTP_HOST} !=127.0.0.1\n",
                "RewriteRule ^ http://www.%{HTTP_HOST}%{REQUEST_URI} [R=301,L]\n",
                "</IfModule>\n",
                "\n",
            ),
        );

        if (array_key_exists($subDomain, $redirectCodes)) {
            $this->fileData = array_merge($this->fileData, $redirectCodes[$subDomain]);
        }
    }
}
